{"version":3,"file":"component---src-pages-about-tsx-9318fee30c32d148305f.js","mappings":"uNAGaA,EAAWC,EAAAA,GAAAA,IAAAA,WAAH,2DAAGA,CAAH,2BACf,sPAGE,uBAIKC,EAAOD,EAAAA,GAAAA,IAAAA,WAAH,uDAAGA,CAAH,2BACX,iNAIOE,EAAQF,EAAAA,GAAAA,KAAAA,WAAH,wDAAGA,CAAH,4BACZ,wQCSN,EAdkC,SAAC,GAAD,IAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QAAxC,OAChC,gBAAC,EAAD,KACE,gBAAC,EAAD,MACA,uBAAKC,UAAU,mBACb,gBAAC,EAAD,KACGF,EADH,MACiBC,GAEjB,uBAAKC,UAAU,sBAAsBL,GACrC,uBAAKK,UAAU,WAAWJ,IAE5B,uBAAKI,UAAU,gCAAgCH,K,8BC2DnD,EA1D4B,WAC1B,OAA8CI,EAAAA,EAAAA,gBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBA4BlBC,EAA6BF,EAAeG,YAC5CC,EAAyBH,EAAkBI,MAEjD,OACE,gBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcf,MAAOS,EAAaT,MAAOC,SAAUQ,EAAaR,WAE/DU,EAAUK,KAAI,SAACC,GACd,MAIIA,EAAKC,KAHPC,EADF,EACEA,GACAC,EAFF,EAEEA,KAFF,IAGEV,YAAeW,EAHjB,EAGiBA,WAAYC,EAH7B,EAG6BA,OAAQnB,EAHrC,EAGqCA,UAAWC,EAHhD,EAGgDA,QAGhD,OACE,gBAAC,EAAD,CACEmB,IAAKJ,EACLnB,MAAOqB,EACPpB,SAAUqB,EACVpB,QAAS,gBAACsB,EAAA,EAAD,CAAYtB,QAASkB,IAC9BjB,UAAWA,EACXC,QAASA,S,UCJrB,EAhD2B,WACzB,OAA8CE,EAAAA,EAAAA,gBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAuBlBC,EAA6BF,EAAeG,YAC5Ce,EAAsBjB,EAAkBI,MAE9C,OACE,gBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcf,MAAOS,EAAaT,MAAOC,SAAUQ,EAAaR,SAAUyB,QAAM,IAChF,uBAAKrB,UAAU,wBACZoB,EAAST,KAAI,SAACC,GACb,MAGIA,EAAKC,KAFPC,EADF,EACEA,GADF,IAEET,YAAeV,EAFjB,EAEiBA,MAAO2B,EAFxB,EAEwBA,KAAMC,EAF9B,EAE8BA,YAG9B,OACE,uBAAKvB,UAAU,kBAAkBkB,IAAKJ,GACpC,gBAACU,EAAA,EAAD,CAAWF,KAAMA,EAAM3B,MAAOA,EAAOE,QAAS0B,WC1C5D,EAV4B,kBAC1B,gBAACE,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAK/B,MAAM,UACX,2BACA,gBAAC,EAAD,MACA,2BACA,gBAAC,EAAD","sources":["webpack://khajeddin.com/./src/components/ui/Timeline/styles.ts","webpack://khajeddin.com/./src/components/ui/Timeline/index.tsx","webpack://khajeddin.com/./src/components/Education/index.tsx","webpack://khajeddin.com/./src/components/Services/index.tsx","webpack://khajeddin.com/./src/pages/about.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border  border-green-200 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  content: React.ReactNode;\n  startDate: string;\n  endDate: string;\n}\n\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <div className=\"w-full sm:w-1/3\">\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <div className=\"font-semibold mt-3\">{title}</div>\n      <div className=\"text-xs\">{subtitle}</div>\n    </div>\n    <div className=\"w-full sm:w-2/3 mt-4 sm:mt-0\">{content}</div>\n  </Styled.Timeline>\n);\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Education {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      university: string;\n      degree: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Education: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { fields: [frontmatter___endDate], order: ASC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const education: Education[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport { IconProps } from 'components/ui/Icon';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Service {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      icon: IconProps;\n      description: string;\n    };\n  };\n}\n\nconst Services: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: frontmatter___title }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const services: Service[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <div className=\"flex flex-wrap -mx-3\">\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <div className=\"w-full sm:w-1/2\" key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\nimport Services from 'components/Services';\n\nconst AboutPage: React.FC = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <hr />\n    <Education />\n    <hr />\n    <Services />\n  </Layout>\n);\n\nexport default AboutPage;\n"],"names":["Timeline","styled","Date","Point","title","subtitle","content","startDate","endDate","className","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","education","edges","Container","section","TitleSection","map","item","node","id","html","university","degree","key","FormatHtml","services","center","icon","description","InfoBlock","Layout","SEO"],"sourceRoot":""}