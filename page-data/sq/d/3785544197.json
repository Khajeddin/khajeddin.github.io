{"data":{"markdownRemark":{"frontmatter":{"title":"Blog","subtitle":"All my posts"}},"allMarkdownRemark":{"edges":[{"node":{"id":"ed1b3d05-e920-5e37-a61c-a038ae992668","html":"<h2>Data types</h2>\n<ul>\n<li>\n<p><strong>Object:</strong> Everything in R is called \"an object\". R has 5 basic atomic classes of objects which are:</p>\n<ul>\n<li>Character</li>\n<li>Numeric (Real numbers)</li>\n<li>Integer</li>\n<li>Complex</li>\n<li>Logical (True/False)</li>\n</ul>\n</li>\n<li>\n<p><strong>Vector:</strong> The most basic object, which contains one or more of a single type of object (Hint: a vector cannot contain two/more than one types of objects; every object in a vector should be of the same class)</p>\n</li>\n<li>\n<p><strong>List:</strong> is a sequence of objects that can contain objects from different classes (Technically a <em>list</em> is a <em>vector</em> which can contain objects from different classes).</p>\n</li>\n<li>\n<p><strong>Matrices:</strong> are vectors with more than one dimensions.</p>\n</li>\n</ul>\n<h2>Numbers</h2>\n<p>as states in the <a href=\"#data-types\">Data Types section</a>, numbers can be numeric(real numbers) or integers. By default, every number is considered to be a double precision real number unless you strictly define it as Integer by using an \"L\" suffix. for example:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">x &lt;- 4   # This gives you a real number\n\ny &lt;- 4L  # This gives you an integer</code>\n        </deckgo-highlight-code>\n<p><strong>infinit</strong> is shown as <strong>Inf</strong>, for example:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">1/0 = Inf\nand\n1/Inf = 0</code>\n        </deckgo-highlight-code>\n<p><strong>Undefined Vale</strong> or <strong>Missing Value</strong> is shown as <strong>NaN</strong> (Not a Number), for example:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">0/0 = NaN</code>\n        </deckgo-highlight-code>\n<h2>Defining variables</h2>\n<ul>\n<li>\n<p>Defing a single variable:</p>\n<p>To assign a numerical value to a variable, use the following expression:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">x &lt;- 5</code>\n        </deckgo-highlight-code>\n<p>To assign a character string to a variable, use the following expression:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">y &lt;- &quot;hello&quot;</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>Defining vectors:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">z &lt;- c(0.3, 2.5) # Creates a numeric vector like [0.3, 2.5]\n\nz &lt;- c(True, Fakse) # Creates a logical vector like\n\nz &lt;- c(T, F) # Creates a logical vector like\n\nz &lt;- c(&quot;d&quot;, &quot;f&quot;, &quot;m&quot;) # Creates a character vector\n\nz &lt;- c(0+3i, 2+5i) # Creates a vector of complex numbers\n\nz &lt;- 1:5    # Creates a vector like [1, 2, 3, 4, 5]\n</code>\n        </deckgo-highlight-code>\n<p>you can also create an empty vector with the following vector() function. It gets two arguments, the fisrt one is Data Type and the second one is the length of the vector. For example:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">z &lt;- vector(&quot;numeric&quot;, 5L) # Creates a numeric vector [0, 0, 0, 0, 0]\n\nz &lt;- vector(&quot;character&quot;, 5L) # Creates a character vector [&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;]</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>Defining Lists:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">&gt; x &lt;- list(2.5, 4L, &quot;hello&quot;, F, 7+0i)\n&gt; x\n[[1]]\n[1] 2.5\n\n[[2]]\n[1] 4\n\n[[3]]\n[1] &quot;hello&quot;\n\n[[4]]\n[1] FALSE\n\n[[5]]\n[1] 7+0i</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>Defining Martices:<br>\nIn order to define an empty martix we can use the following expression:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&gt; x &lt;- matrix(nrow = 2, ncol = 4)\n&gt; x\n    [,1] [,2] [,3] [,4]\n[1,]   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA</code>\n        </deckgo-highlight-code>\n<p>We can also assign a vector to a matrix. Hint: martices are constructed <strong>column-wise</strong>. Therefore, a matrix starts from the upper left entry and ends with the lower right one. For example:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&gt; x &lt;- matrix(1:8, nrow = 2, ncol = 4)\n&gt; x\n    [,1] [,2] [,3] [,4]\n[1,]    1    3    5    7\n[2,]    2    4    6    8</code>\n        </deckgo-highlight-code>\n<p>Another way of creating a matrix is to directly create it from a vector using dim() function:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&gt; v &lt;- 1:12\n&gt; v\n[1]  1  2  3  4  5  6  7  8  9 10 11 12\n&gt; dim(v) &lt;- c(3, 4)\n&gt; v\n    [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12</code>\n        </deckgo-highlight-code>\n<p>Binding columns or rows is yet another way of defining a matrix:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&gt; x &lt;- 1:3\n&gt; y &lt;- 14:16\n&gt; cbind(x, y) # Binding columns to create a matrix\n    x  y\n[1,] 1 14\n[2,] 2 15\n[3,] 3 16\n&gt; rbind(x, y) # Binding rows to create a matrix\n[,1] [,2] [,3]\nx    1    2    3\ny   14   15   16</code>\n        </deckgo-highlight-code>\n</li>\n</ul>\n<h2>Commenting</h2>\n<p>R only supports single-line comments, and any string that starts with # is interpreted as comment. this string can be at the begining of a line, like:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\"># This is a comment!!</code>\n        </deckgo-highlight-code>\n<p>Or it can start in the middle of a line (following an R expression), like:</p>\n<deckgo-highlight-code language=\"r\"  >\n          <code slot=\"code\">x &lt;- 6 # This is a comment!!</code>\n        </deckgo-highlight-code>","fields":{"slug":"/blog/R-Basics/"},"frontmatter":{"title":"R Basics!","description":"Lets starts with the basics!","date":"Aug 19, 2021","tags":["Tutoial","R","datascience"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7fef8feab37f6d3eba3bf389565cccc0/f26dc/introduction-to-r-course.png","srcSet":"/static/7fef8feab37f6d3eba3bf389565cccc0/f26dc/introduction-to-r-course.png 620w","sizes":"100vw"},"sources":[{"srcSet":"/static/7fef8feab37f6d3eba3bf389565cccc0/aaca5/introduction-to-r-course.webp 620w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5806451612903225}}}}}}]}}}