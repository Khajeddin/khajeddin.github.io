{"version":3,"file":"component---src-templates-blog-post-index-tsx-63a26521047dd11e76d5.js","mappings":"oPAWaA,GARQC,EAAAA,QAAAA,GAAAA,WAAH,yDAAGA,CAAH,SACZ,wCAGeA,EAAAA,QAAAA,OAAAA,WAAH,yDAAGA,CAAH,SACZ,+FAGeA,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,SACZ,kFCqDN,EA/BkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnCC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACEC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CAAKC,MAAOP,EAAKQ,YAAYD,QAC7BH,EAAAA,cAACK,EAAAA,EAAD,CAAWC,SAAO,GAChBN,EAAAA,cAACO,EAAAA,EAAD,CAAcJ,MAAOP,EAAKQ,YAAYI,KAAMC,SAAUb,EAAKQ,YAAYD,QACvEH,EAAAA,cAACU,EAAAA,EAAD,CAAYC,QAASf,EAAKgB,OAC1BZ,EAAAA,cAACa,EAAD,KACEb,EAAAA,cAAAA,OAAAA,KACGF,GACCE,EAAAA,cAACc,EAAAA,QAAD,CAAMC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,YAApC,KACKpB,EAASM,YAAYD,QAI9BH,EAAAA,cAAAA,OAAAA,KACGD,GACCC,EAAAA,cAACc,EAAAA,QAAD,CAAMC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKK,YAAYD,MADpB","sources":["webpack://khajeddin.com/./src/templates/BlogPost/styles.ts","webpack://khajeddin.com/./src/templates/BlogPost/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\n`;\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-10`};\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  html: React.ReactNode;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n  };\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: {\n    slug: string;\n    next: Post;\n    previous: Post;\n  };\n}\n\nconst BlogPost: React.FC<Props> = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <Container section>\n        <TitleSection title={post.frontmatter.date} subtitle={post.frontmatter.title} />\n        <FormatHtml content={post.html} />\n        <Styled.Links>\n          <span>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"previous\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </span>\n          <span>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </span>\n        </Styled.Links>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["Links","styled","data","pageContext","post","markdownRemark","previous","next","React","Layout","SEO","title","frontmatter","Container","section","TitleSection","date","subtitle","FormatHtml","content","html","Styled","Link","to","fields","slug","rel"],"sourceRoot":""}